# 创建应用程序
python manage.py startapp users
# 添加应用程序users至settings.py
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # 我的应用程序
    'learning_logs',
    'users'
]
# 编写learning_log的urls.py文件
from django.conf.urls import include, url
from django.contrib import admin

urlpatterns = [
    url(r'^admin/', admin.site.urls),
    url(r'^users/', include('users.urls', namespace='users')),
    url(r'', include('learning_logs.urls', namespace='learning_logs')),
]

# 登录页面
"""定义users的URL模式"""

from django.conf.urls import url
from django.contrib.auth.views import login


urlpatterns = [
    # 登陆页面
    url(r'^login/$', login, {'template_name': 'users/login.html'}, name='login'),
]
创建I:\learning_log\users\templates\users目录
编写模板login.html

{% extends "learning_logs/base.html" %}

{% block content %}
    {% if form.errors %}
    <p>
        Your username and password didn't match.Please try again.
    </p>
    {% endif %}

    <form method="post" action="{% url 'users:login' %}">
        {% csrf_token %}
        {{ form.as_p }}

        <button name="submit">log in</button>
        <input type="hidden" name="next" value="{% url 'learning_logs:index' %}" />
    </form>
{% endblock content %}
修改I:\learning_log\learning_logs\templates\learning_logs\base.html

<p>
    <a href="{% url 'learning_logs:index' %}">Learning Log</a> -
    <a href="{% url 'learning_logs:topics' %}">Topics</a> -
    # 判断用户登录与否is_authenticated
    {% if user.is_authenticated %}
        Hello,{{ user.username }}.
    {% else %}
        <a href="{% url 'users:login' %}">log in</a>
    {% endif %}

</p>
{% block content %} {% endblock content %}

# 注销–创建注销链接
from django.conf.urls import url
from django.contrib.auth.views import login
from . import views

urlpatterns = [
    # 登陆页面
    url(r'^login/$', login, {'template_name': 'users/login.html'}, name='login'),

    # 注销链接
    url(r'^logout/$', views.logout_view, name='logout')
]
from django.shortcuts import render
from django.http import HttpResponseRedirect
from django.core.urlresolvers import reverse
from django.contrib.auth import logout


# Create your views here.
def logout_view(request):
    # 注销用户
    logout(request)
    return HttpResponseRedirect(reverse('learning_logs:index'))
# 注销
<p>
    <a href="{% url 'learning_logs:index' %}">Learning Log</a> -
    <a href="{% url 'learning_logs:topics' %}">Topics</a> -
    {% if user.is_authenticated %}
        Hello,{{ user.username }}.
        <a href="{% url 'users:logout' %}">log out</a>
    {% else %}
        <a href="{% url 'users:login' %}">log in</a>
    {% endif %}

</p>
{% block content %} {% endblock content %}
# 注册页面
"""定义users的URL模式"""

from django.conf.urls import url
from django.contrib.auth.views import login
from . import views

urlpatterns = [
    # 登陆页面
    url(r'^login/$', login, {'template_name': 'users/login.html'}, name='login'),

    # 注销链接
    url(r'^logout/$', views.logout_view, name='logout'),

    # 注册页面
    url(r'^register/$', views.register, name='register'),
]
from django.shortcuts import render
from django.http import HttpResponseRedirect
from django.core.urlresolvers import reverse
from django.contrib.auth import logout, login, authenticate
from django.contrib.auth.forms import UserCreationForm


# Create your views here.
def logout_view(request):
    # 注销用户
    logout(request)
    return HttpResponseRedirect(reverse('learning_logs:index'))


def register(request):
    # 注册新用户
    if request.method != 'POST':
        # 显示空的注册表单
        form = UserCreationForm()
    else:
        # 处理注册好的表单
        form = UserCreationForm(data=request.POST)
        if form.is_valid():
            new_user = form.save()
            # 让用户自动登录，重新定位到主页
            authenticate_user = authenticate(username=new_user.username, password=request.POST['password1'])
            login(request, authenticate_user)
            return HttpResponseRedirect(reverse('learning_logs:index'))

    context = {'form': form}
    return render(request, 'users/register.html', context)
# I:\learning_log\users\templates\users\register.html
{% extends "learning_logs/base.html" %}

{% block content %}

<form method='post' action="{% url 'users:register' %}">
    {% csrf_token %}
    {{ form.as_p }}
    <button name="submit">register</button>
    <input type="hidden" name="next" value="{% url 'learning_logs:index' %}" />
</form>
{% endblock content %}
# 访问
from django.contrib.auth.decorators import login_required
@login_required    
def topics(request):
    '''显示所有的主题'''
    topics = Topic.objects.order_by("date_added")
    context = {'topics':topics}
    return render(request, 'learning_logs/topics.html', context)

# 让用户有自己数据
from django.contrib.auth.decorators import login_required

@login_required    
def topics(request):
    '''显示所有的主题'''
    topics = Topic.objects.order_by("date_added")
    context = {'topics':topics}
    return render(request, 'learning_logs/topics.html', context)

