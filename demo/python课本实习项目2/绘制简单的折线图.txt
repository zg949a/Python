import matplotlib.pyplot as plt

squares = [1, 4, 9, 16, 25]
plt.plot(squares)
plt.show()
import matplotlib.pyplot as plt

squares = [1, 4, 9, 16, 25]
plt.plot(squares, linewidth=5)

# 设置图表标题，并给坐标轴加上标签
plt.title("Square Numbers", fontsize=24)
plt.xlabel("Value", fontsize=14)
plt.ylabel("Square of Value", fontsize=14)

# 设置刻度标记的大小
plt.tick_params(axis='both', labelsize=14)

plt.show()
import matplotlib.pyplot as plt

input_values = [1, 2, 3, 4, 5]
squares = [1, 4, 9, 16, 25]
plt.plot(input_values, squares, linewidth=5)
--snip--
import matplotlib.pyplot as plt

plt.scatter(2, 4)
plt.show()
import matplotlib.pyplot as plt

plt.scatter(2, 4, s=200)

# 设置图表标题 & 给坐标轴加上标签
plt.title("Square Numbers", fontsize=24)
plt.xlabel("Value", fontsize=14)
plt.ylabel("Square of Value", fontsize=14)

# 设置刻度标记的大小
plt.tick_params(axis='both', which='major', labelsize=14)

plt.show()
import matplotlib.pyplot as plt

x_values = [1, 2, 3, 4, 5]
y_values = [1, 4, 9, 16, 25]

plt.scatter(x_values, y_values, s=100)

# 设置图表标题 & 给坐标轴加上标签
--snip--
import matplotlib.pyplot as plt

x_values = list(range(1, 1001))
y_values = [x**2 for x in x_values]

plt.scatter(x_values, y_values, s=40)

# 设置图表标题 & 给坐标轴加上标签
--snip--

# 设置每个坐标轴的取值范围
plt.axis([0, 1100, 0, 1100000])

plt.show()

# 要删除数据点的轮廓，可调用scatter()传递实参edgecolor='none'
plt.scatter(x_values, y_values, edgecolor='none', s=40)

# 修改数据点的颜色，可向scatter()传递参数c，并将其设置为要使用的颜色的名称，如
plt.scatter(x_values, y_values, c='red', edgecolor='none', s=40)

# 还可以使用RGB颜色模式自定义颜色：传递参数c，将其设置为一个元组，其中包含三个0~1之间的小数值，分别表示红色、绿色和蓝色分量
plt.scatter(x_values, y_values, c=(0, 0, 0.8), edgecolor='none', s=40)
